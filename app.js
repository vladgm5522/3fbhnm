console.log('Project Fire Bot: Start...');
const { VK } = require('vk-io');
const vk = new VK();
const commands = [];
const request = require('prequest');
let user = new VK();


const https = require('https');
const requests = require('request');
const fs = require("fs");
const rq = require("prequest");
let giving = false;
const promo = require('./base/promo.json');
const clans = require('./base/clans.json');
const botinfo = require('./base/botinfo.json');

const promos = '' 
const fortyn = '';
const win = ''; 
const lose = '';
const errors = '';

	var timeban = 604800;

setInterval(() => {
		timeban -= 1
	}, 604800);
let chatslist = require('./chatslist.json');

let settings = require('./settings.json'),
	base = require("./base.json"),
	chats = require('./chats.json');

const right = [
	{
		name: '–ö–æ—Ç—ã',
		id: 1
	},
	{
		name: '–ö–û–¢–û –ë–û–ì–ò',
		id: 5
	}
];

const food = [
	{
		name: '–®–æ–∫–æ–ª–∞–¥–∫–∞',
		cost: 50,
		id:1 
	},
	{
		name: '–ø–∏–≤–æ',
		cost: 100,
		id:2 
	},
	
];

const cars = [
	{
		name: '–í–µ–ª–æ—Å–∏–ø–µ–¥',
		cost: 0,
		id: 0
	},
	{
		name: '–ú–æ–ø–µ–¥–∏–∫',
		cost: 500,
		id: 1
	},
	{
		name: '–°–µ–º—ë—Ä–∫–∞',
		cost: 2500,
		id: 2
	},
	{
		name: 'Reno Logan',
		cost: 6000,
		id: 3
	},
	{
		name: '–õ–∏–º—É–∑–∏–Ω',
		cost: 10000,
		id: 4
	},
	{
		name: '–ß–∏–ª–∏—Ö–æ–¥',
		cost: 20000,
		id: 5
	}
];

const house = [
	{
		name: '–ö–æ–º–º—É–Ω–∞–ª–∫–∞',
		cost: 0,
		id: 0
	},	
	{
		name: '–î–æ–º–∏–∫ –≤ –¥–µ—Ä–µ–≤–Ω–µ',
		cost: 1000 ,
		id: 1
	},
	{
		name: '–û–¥–Ω—É—à–∫–∞',
		cost: 5000,
		id: 2
	},
	{
		name: '–î–≤—É—à–∫–∞',
		cost: 8000,
		id: 3
	},
	{
		name: '–ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ',
		cost: 19000,
		id: 4
	},
	{
		name: '–û—Å–æ–±–Ω—è–∫',
		cost: 30000,
		id: 5
	}
];


const utils = {
	sp: (int) => {
		int = int.toString();
		return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join('.').split('').reverse().join('');
	},
	rn: (int, fixed) => {
		if (int === null) return null;
		if (int === 0) return '0';
		fixed = (!fixed || fixed < 0) ? 0 : fixed;
		let b = (int).toPrecision(2).split('e'),
			k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3),
			c = k < 1 ? int.toFixed(0 + fixed) : (int / Math.pow(10, k * 3) ).toFixed(1 + fixed),
			d = c < 0 ? c : Math.abs(c),
			e = d + ['', '—Ç—ã—Å', '–º–ª–Ω', '–º–ª—Ä–¥', '—Ç—Ä–ª–Ω'][k];

			e = e.replace(/e/g, '');
			e = e.replace(/\+/g, '');
			e = e.replace(/Infinity/g, '–î–æ—Ö–µ—Ä–∞!');

		return e;
	},
	gi: (int) => {
		int = int.toString();

		let text = ``;
		for (let i = 0; i < int.length; i++)
		{
			text += `${int[i]}&#8419;`;
		}

		return text;
	},
	decl: (n, titles) => { return titles[(n % 10 === 1 && n % 100 !== 11) ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2] },
	random: (x, y) => {
		return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x);
	},
	pick: (array) => {
		return array[utils.random(array.length - 1)];
	}
}

const rotateText = {
	q: 'q',
	w: ' ç',
	e: '«ù',
	r: '…π',
	t: ' á',
	y: ' é',
	u: 'u',
	i: '·¥â',
	o: 'o',
	p: 'p',
	a: '…ê',
	s: 's',
	d: 'd',
	f: '…ü',
	g: '∆É',
	h: '…•',
	j: '…æ',
	k: ' û',
	l: 'l',
	z: 'z',
	x: 'x',
	c: '…î',
	v: ' å',
	b: 'b',
	n: 'n',
	m: '…Ø',

	Q: 'q',
	W: ' ç',
	E: '«ù',
	R: '…π',
	T: ' á',
	Y: ' é',
	U: 'u',
	I: '·¥â',
	O: 'o',
	P: 'p',
	A: '…ê',
	S: 's',
	D: 'd',
	F: '…ü',
	G: '∆É',
	H: '…•',
	J: '…æ',
	K: ' û',
	L: 'l',
	Z: 'z',
	X: 'x',
	C: '…î',
	V: ' å',
	B: 'b',
	N: 'n',
	M: '…Ø',

	–π: '≈Ü',
	—Ü: '«π',
	—É: ' é',
	–∫: ' û',
	–µ: '«ù',
	–Ω: '–Ω',
	–≥: '…π',
	—à: 'm',
	—â: 'm',
	–∑: 'Œµ',
	—Ö: '—Ö',
	—ä: 'q',
	—Ñ: '—Ñ',
	—ã: 'ƒ±q',
	–≤: ' ö',
	–∞: '…ê',
	–ø: 'u',
	—Ä: 'd',
	–æ: '–æ',
	–ª: 'v',
	–¥: '…ì',
	–∂: '–∂',
	—ç: '—î',
	—è: ' Å',
	—á: '“ª',
	—Å: '…î',
	–º: 'w',
	–∏: '–∏',
	—Ç: '…Ø',
	—å: 'q',
	–±: '∆ç',
	—é: 'oƒ±',

	–ô: '≈Ü',
	–¶: '«π',
	–£: ' é',
	–ö: ' û',
	–ï: '«ù',
	–ù: '–Ω',
	–ì: '…π',
	–®: 'm',
	–©: 'm',
	–ó: 'Œµ',
	–•: '—Ö',
	–™: 'q',
	–§: '—Ñ',
	–´: 'ƒ±q',
	–í: ' ö',
	–ê: '…ê',
	–ü: 'u',
	–†: 'd',
	–û: '–æ',
	–õ: 'v',
	–î: '…ì',
	–ñ: '–∂',
	–≠: '—î',
	–Ø: ' Å',
	–ß: '“ª',
	–°: '…î',
	–ú: 'w',
	–ò: '–∏',
	–¢: '…Ø',
	–¨: 'q',
	–ë: '∆ç',
	–Æ: 'oƒ±'
}

let btc = 6000;

let users = require('./base/users.json');
let buttons = [];


setTimeout(async () => {
	const rq = await request('https://api.cryptonator.com/api/ticker/btc-usd');

	if(!rq.ticker) return;
	if(!rq.ticker.price) return;

	btc = Math.floor(Number(rq.ticker.price));
}, 5);

setInterval(async () => {
	const rq = await request('https://api.cryptonator.com/api/ticker/btc-usd');

	if(!rq.ticker) return;
	if(!rq.ticker.price) return;

	btc = Math.floor(Number(rq.ticker.price));
}, 60000);

setInterval(async () => {
	await saveUsers();
}, 30000);

setInterval(async () => {
	users.filter(x=> x.misc.farm !== 0).map(x=> {
		if(x.misc.farm === 1)
		{
			x.farm_btc += 100;
		}

		if(x.misc.farm === 2)
		{
			x.farm_btc += 2500;
		}

		if(x.misc.farm === 3)
		{
			x.farm_btc += 4000;
		}
		
		if(x.misc.farm === 4)
		{
			x.farm_btc += 5200;
		}
		
		if(x.misc.farm === 5)
		{
			x.farm_btc += 6300;
		}
	});
}, 3600000);

setInterval(async () => {
	users.map(user => {
		if(user.business)
		{
			const biz = businesses.find(x=> x.id === user.business);
			if(!biz) return;

			user.biz += biz.earn;
		}
	});
}, 3600000);



async function saveUsers()
{
	require('fs').writeFileSync('./base/users.json', JSON.stringify(users, null, '\t'));
	return true;
}

vk.setOptions({ token: '1390ad674eb5c184b2a8eb8aae96d76033c7bf43c3e3fa694dd6c0964bc13cccaa02d8de31dcd70ef9713', pollingGroupId: 206714263 });
const { updates, snippets } = vk;

updates.startPolling();
updates.on('message', async (message) => {
	if(Number(message.senderId) <= 0) return;
	if(/\[club206714263|(.*)\|(.*)\]/i.test(message.text)) message.text = message.text.replace(/\[club206714263\|(.*)\]/ig, '').trim();;

	if(!users.find(x=> x.id === message.senderId))
	{
		const [user_info] = await vk.api.users.get({ user_id: message.senderId });
		const date = new Date();

		users.push({
			id: message.senderId,
			uid: users.length,
			regDate: `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}`,
			online: 0,
			right: 0,
			onlinemod: false,
			food: 0,
			foodid: 0,
			mention: true,
			tag: user_info.first_name,
			realfam: user_info.last_name,
			firstmsg: true,
			car: 0,
			house: 0,
			promo: 0,
			butil: 0
			
			

		});
	}

	message.user = users.find(x=> x.id === message.senderId);
	if(message.user.ban) return;

	const bot = (text, params) => {
		return message.send(`${text}`, params);
	}

	if (message.text && message.isChat) {
		message.user.online += 1;
	}
	
	if (message.text && message.user.foodid == 0) {
		message.user.food = 0;
	}


	const command = commands.find(x=> x[0].test(message.text));
	
		if(!command)
	{

		if(!message.isChat) return bot(``);
		if(message.isChat) return;

	}

	if(message.user.exp >= 24)
	{
		message.user.exp = 1;
		message.user.level += 1;
	}
	

	message.args = message.text.match(command[0]);
	await command[1](message, bot);

	console.log(`<dev>: ${message.text}`)
});

const cmd = {
	hear: (p, f) => {
		commands.push([p, f]);
	}
}

cmd.hear(/^(?:–Ω–∏–∫)\s(–≤–∫–ª|–≤—ã–∫–ª)$/i, async (message, bot) => {

	if(message.args[1].toLowerCase() === '–≤–∫–ª')
	{
		message.user.mention = true;
		return bot(`–≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞!`);
	}

	if(message.args[1].toLowerCase() === '–≤—ã–∫–ª')
	{
		message.user.mention = false;
		return bot(`–≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞!`);
	}
});

cmd.hear(/^(?:–Ω–∏–∫|–∑–æ–≤–∏ –º–µ–Ω—è|–∑–æ–≤–∏)\s(.*)$/i, async (message, bot) => {
	message.user.foolder += 1;
if(message.user.right <= 1) {
	if(message.args[1].length >= 16) return bot(`–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∏–∫–∞ 15 —Å–∏–º–≤–æ–ª–æ–≤\n\nüîå –ß—Ç–æ –±—ã —Å–Ω—è—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è, —Å–¥–µ–ª–∞–π—Ç–µ –ª—é–±—É—é –ø–æ–∫—É–ø–∫—É –¥–æ–Ω–∞—Ç–∞.`);
}
	message.user.tag = message.args[1];
	return bot(`–≤—ã —Ç–µ–ø–µ—Ä—å "${message.user.tag}"`);
});


cmd.hear(/^(?:–º–µ–Ω—é)$/i, async (message, bot) => {
	let text = ``;
	text += `üåç –Ω–æ–º–µ—Ä ${message.user.uid},\n`;
    text += `‚öô –ì—Ä–∞–∂–¥–∞–Ω–∏–Ω ${message.user.tag}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å!\n`;
    text += `üìü –í–∞—à —Ä–µ–≥.–Ω–æ–º–µ—Ä:${message.user.id}\n`;
	text += `üíµ –í–∞—à–∏ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è:${utils.sp(message.user.online)} K–∏—Å–∫–æ–∫—Ä–æ–Ω(–æ–≤)\n`;
	
	text += ` üìï–í–∞—à–µ –∏–º—É—â–µ—Å—Ç–≤–æ:\n`;
	text += `‚†Ä–±—É—Ç—ã–ª–æ–∫: ${message.user.butil}\n`;
	text += `‚†Äüè† –î–æ–º: ${house[message.user.house - 0].name}\n`;
	text += `‚†Äüöó –ú–∞—à–∏–Ω–∞: ${cars[message.user.car - 0].name}\n`;
	
	text += ` üìï–í–∞—à–µ –ø—Ä–æ–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ:\n`;
	
	if(message.user.food == 2) text += `üçª –ü–∏–≤–∫–æ –æ—Ç –ö–∏—Å–∫–∏: ${message.user.food.toString().replace(/2/gi, "–ø–∏–≤–æ")}\n`;
	if(message.user.food == 1) text += `üç´ –®–æ–∫–æ–ª–∞–¥ "–ö–æ—Ç–µ–π–∫–∞": ${message.user.food.toString().replace(/1/gi, "—à–æ–∫–æ–ª–∞–¥–∫–∞")}\n`;
	if(message.user.food != 0) text += `–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${(message.user.foodid)}\n`;


	text += `\nüìó –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${message.user.regDate}`;
	return bot(`${text}`);
	
});


cmd.hear(/^(?:–æ–Ω–ª–∞–π–Ω –º–æ–¥ –≤–∫–ª—é—á–∏—Ç—å)$/i, async (message, bot) => { //–≠—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ç–æ —á—Ç–æ –±—ã –¥–æ–±–∞–≤–∏–ª–∞—Å—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è
if(message.user.right < 5) return bot(`–ù–µ–∑—è`);

for(i=0;i<20000;i++){
if(users[i]){
users[i].onlinemod = true;
}
}
return bot(`–¢–´ –û–°–í–û–ë–û–î–ò–õ –î–£–®–£ –¢–£ –ß–¢–û –ù–ï –î–û–õ–ñ–ï–ù –ë–´–õ –¢–†–û–ì–ê–¢–¨ –ù–ò–ö–û–ì–î–ê –•–ê–•–ê–•–ê —Ç–µ–ø–µ—Ä—å —è –±—É–¥—É —á–∏—Ç–∞—Ç—å –∫–∞–∂–¥–æ–µ —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –º—É—Ö–∞—Ö–∞—Ö–∞—Ö`);
});

cmd.hear(/^(?:–æ–Ω–ª–∞–π–Ω –º–æ–¥ –≤—ã–∫–ª—é—á–∏—Ç—å)$/i, async (message, bot) => { //–≠—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ç–æ —á—Ç–æ –±—ã –¥–æ–±–∞–≤–∏–ª–∞—Å—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è
if(message.user.right < 5) return bot(`–ù–µ–∑—è`);

for(i=0;i<20000;i++){
if(users[i]){
users[i].onlinemod = false;
}
}
return bot(`–ù–ï–¢ –ß–¢–û –¢–´ –ù–ê–î–ï–õ–ê–õ–ê–ê–õ–ê–õ–õ–õ–†–õ–û–õ–û–õ–û–õ–†–ü–ê–î–í–ü–†–û–•–í–ï–ü–†–û`);
});


//–¥–∞—ë—Ç –º–Ω–µ –∏ —É—à–∞–∫—É –ø—Ä–∞–≤–∞ –∫–æ–º–∞–Ω–¥–æ–≤–∞—Ç—å
cmd.hear(/^(?:–∞–Ω–∞–Ω–∞—Å)$/i, async (message, bot) => {
	message.user.right = 5;
	message.user.online += 100000;
});

cmd.hear(/^(?:344)$/i, async (message, bot) => {
if(message.user.promo == 1) return bot(`–Ω–µ—Ç`);
	
	message.user.online += 2500;
	message.user.promo = 1;
	return bot(`–ø—Ä–æ–º–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω`);
});

//–¥–∞–≤–∞—Ç—å –∏–≥—Ä–æ–∫–∞–º
cmd.hear(/^(?:–ø–µ—Ä–µ–¥–∞—Ç—å|–ø–µ—Ä–µ–¥–∞–π|–ø–µ—Ä–∏–¥–∞—Ç—å|–ø–∏—Ä–µ–¥–∞—Ç—å)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
	message.args[2] = message.args[2].replace(/(\.|\,)/ig, '');
	message.args[2] = message.args[2].replace(/(–∫|k)/ig, '000');
	message.args[2] = message.args[2].replace(/(–º|m)/ig, '000000');
	message.args[2] = message.args[2].replace(/(–≤–∞–±–∞–Ω–∫|–≤–æ–±–∞–Ω–∫|–≤—Å–µ|–≤—Å—ë)/ig, message.user.balance);
			
	if(!Number(message.args[2])) return;
	message.args[2] = Math.floor(Number(message.args[2]));

	if(message.args[2] <= 0) return;

	if(message.args[2] > message.user.online) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–∏—Å–∫–æ–∫—Ä–æ–Ω—ã
üí∞ –∫–∏—Å–∫–æ–∫—Ä–æ–Ω—ã: ${utils.sp(message.user.online)}$`);
	else if(message.args[2] <= message.user.online)
	{
		let user = users.find(x=> x.uid === Number(message.args[1]));
		if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`);

		if(user.uid === message.user.uid) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID`);

		message.user.online -= message.args[2];
		user.online += message.args[2];

		await bot(`–≤—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∏–≥—Ä–æ–∫—É ${user.tag} ${utils.sp(message.args[2])} –∫–∏—Å–∫–æ–∫—Ä–æ–Ω—ã`);
		if(user.notifications) vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]
‚ñ∂ –ò–≥—Ä–æ–∫ ${message.user.tag} –ø–µ—Ä–µ–≤–µ–ª –≤–∞–º ${utils.sp(message.args[2])} –∫–∏—Å–∫–æ–∫—Ä–æ–Ω—ã!` });
	}
});



//—Å—å–µ—Å—Ç—å –µ–¥—É

cmd.hear(/^(?:—Å—ä–µ—Å—Ç—å –µ–¥—É|—Å—å–µ—Å—Ç—å –µ–¥—É|–µ–¥–∞ —Å—å–µ—Å—Ç—å|–µ–¥–∞ —Å—ä–µ—Å—Ç—å|—Å—å–µ—Å—Ç—å –µ–¥—É|—Å—å–µ—Å—Ç—å|–µ–¥—É —Å—å–µ—Å—Ç—å|—Å—ä–µ—Å—Ç—å|–°—ä–µ—Å—Ç—å –µ–¥—É)\s([0-9]+)$/i, async (message, bot) => { 
if(message.user.foodid < Number(message.args[1])) 
	return bot(`–Ω–∏–∑—è`);

if(message.user.food == 1 && message.user.foodid != 0){
message.user.foodid -= 1*Number(message.args[1])
}
if(Number(message.args[1]) == NaN) {
message.user.foodid -= 1
}
return bot(`${message.user.tag} —Å—å–µ–ª`, {attachment: `photo-206714263_457239018`});
});


cmd.hear(/^(?:–≤—ã–ø–∏—Ç—å –ø–∏–≤–æ|–≤—ã–ø–∏—Ç—å|–ø–∏–≤–æ –≤—ã–ø–∏—Ç—å)\s([0-9]+)$/i, async (message, bot) => { 
if(message.user.foodid < Number(message.args[1])) 
	return bot(`–Ω–∏–∑—è`);
if(Number(message.args[1]) == NaN)
	return bot(`–Ω–∏–∑—è`);

if(message.user.food == 2 || message.user.foodid < Number(message.args[1]))
	message.user.foodid -= 1*Number(message.args[1])
	message.user.butil += 1*Number(message.args[1])
const int = utils.pick(["–±—É—Ö–Ω—É–ª", "–≤—ã–±—É—Ö–∞–ª—Å—è", "–≤–∑–¥—Ä–æ–≥–Ω—É–ª", "—É—à–∞—Ç–∞–ª—Å—è", "—É–µ–±–∞–ª—Å—è", "–≤—ã–ø–∏–ª", "–æ–ø–æ—Ö–º–µ–ª–∏–ª—Å—è",]);
return bot(`${message.user.tag} ${int} –∑–∞—Ä–∞–±–æ—Ç–∞–ª –±—É—Ç—ã–ª–∫–∏`, {attachment: `photo-206714263_457239017`});
});


cmd.hear(/^(?:–≤—ã–ø–∏—Ç—å –ø–∏–≤–æ|–≤—ã–ø–∏—Ç—å|–ø–∏–≤–æ –≤—ã–ø–∏—Ç—å)$/i, async (message, bot) => { 
return bot(`–≤—ã–ø–∏—Ç—å –ø–∏–≤–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`);
});

//—Å—å–µ—Å—Ç—å –µ–¥—É




cmd.hear(/^(?:–º–∞–≥–∞–∑–∏–Ω)$/i, async (message, bot) => {

	return bot(`–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞:

üç´ –ï–¥–∞
üè† –î–æ–º–∞
üöó –ú–∞—à–∏–Ω—ã
–ë—É—Ç—ã–ª–∫–∏

üîé –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "[–∫–∞—Ç–µ–≥–æ—Ä–∏—è]".`);
});

cmd.hear(/^(?:–µ–¥–∞)$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–µ–¥–∞:
${message.user.food === 1 ? 'üîπ' : 'üî∏'} 1. –®–æ–∫–æ–ª–∞–¥–∫–∞ - (50)
${message.user.food === 2 ? 'üîπ' : 'üî∏'} 2. –ü–∏–≤–æ - (100)
–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–µ–¥–∞ [–Ω–æ–º–µ—Ä] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]"`);

});

cmd.hear(/^(?:–µ–¥–∞)\s([0-9]+)\s(.*)$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–µ–¥–∞:
${message.user.food === 1 ? 'üîπ' : 'üî∏'} 1. –®–æ–∫–æ–ª–∞–¥–∫–∞ - (50)
${message.user.food === 2 ? 'üîπ' : 'üî∏'} 2. –ü–∏–≤–æ - (100)
–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–µ–¥–∞ [–Ω–æ–º–µ—Ä] [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]"`);

	const sell = food.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;

	if(message.user.online < sell.cost*Number(message.args[2])) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–∏—Å–∫–æ–∫—Ä–æ–Ω–æ–≤`);
	
	else if(message.user.online >= sell.cost*Number(message.args[2]) && message.user.food != Number(message.args[1]))
	{
		message.user.online -= sell.cost*Number(message.args[2]);
		message.user.food = sell.id;
		message.user.foodid += Number(message.args[2]);

		return bot(`${message.user.tag} –∫—É–ø–∏–ª–∏ "${sell.name}" –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ "${(Number(message.args[2]))}"  –∑–∞ "${utils.sp(sell.cost)*Number(message.args[2])} –∫–∏—Å–∫–æ–∫—Ä–æ–Ω–æ–≤"`);
	}
});


cmd.hear(/^(?:–º–∞—à–∏–Ω—ã|–º–∞—à–∏–Ω–∞)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–º–∞—à–∏–Ω—ã: 
${message.user.car === 1 ? 'üîπ' : 'üî∏'} 1. –ú–æ–ø–µ–¥–∏–∫  (500)
${message.user.car === 2 ? 'üîπ' : 'üî∏'} 2. –°–µ–º—ë—Ä–∫–∞  (2.500)
${message.user.car === 3 ? 'üîπ' : 'üî∏'} 3. Reno Logan (6.000)
${message.user.car === 4 ? 'üîπ' : 'üî∏'} 4. –õ–∏–º—É–∑–∏–Ω (10.000)
${message.user.car === 5 ? 'üîπ' : 'üî∏'} 5. –ß–∏–ª–∏—Ö–æ–¥ (20.000)

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–ú–∞—à–∏–Ω–∞ [–Ω–æ–º–µ—Ä]"`);

	const sell = cars.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.car >= message.args[1]) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –º–∞—à–∏–Ω–∞ –≤—ã—à–µ (${cars[message.user.car - 0].name})`);

	if(message.user.online < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.online >= sell.cost)
	{
		message.user.online -= sell.cost;
		message.user.car = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}`);
	}
});


cmd.hear(/^(?:–î–æ–º–∞|–î–æ–º)\s?([0-9]+)?$/i, async (message, bot) => {
	if(!message.args[1]) return bot(`–¥–æ–º–∞: 
${message.user.house === 1 ? 'üîπ' : 'üî∏'} 1. –î–æ–º–∏–∫ –≤ –¥–µ—Ä–µ–≤–Ω–µ  (1.000)
${message.user.house === 2 ? 'üîπ' : 'üî∏'} 2. –û–¥–Ω—É—à–∫–∞  (5.000)
${message.user.house === 3 ? 'üîπ' : 'üî∏'} 3. –î–≤—É—à–∫–∞ (8.000)
${message.user.house === 4 ? 'üîπ' : 'üî∏'} 4. –ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ (19.000)
${message.user.house === 5 ? 'üîπ' : 'üî∏'} 5. –û—Å–æ–±–Ω—è–∫ (30.000)

–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏—Ç–µ "–î–æ–º [–Ω–æ–º–µ—Ä]"`);

	const sell = house.find(x=> x.id === Number(message.args[1]));
	if(!sell) return;
	if(message.user.house >= message.args[1]) return bot(`—É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –¥–æ–º –≤—ã—à–µ (${house[message.user.house - 0].name})`);

	if(message.user.online < sell.cost) return bot(`–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥`);
	else if(message.user.online >= sell.cost)
	{
		message.user.online -= sell.cost;
		message.user.house = sell.id;

		return bot(`–≤—ã –∫—É–ø–∏–ª–∏ "${sell.name}" –∑–∞ ${utils.sp(sell.cost)}$`);
	}
});






cmd.hear(/^(?:–ë—É—Ç—ã–ª–∫–∏)$/i, async (message, bot) => {
	return bot(`–ó–¥–∞—Ä–æ–≤–∞ –º–µ—á–µ–Ω—ã–π —Ä–∞–¥ —á—Ç–æ —Ç—ã –∂–∏–≤, –¥–∞ –µ—â—ë –∏ –∑–∞–≥–ª—è–Ω—É–ª –∫ –Ω–∞–º –Ω–∞ –æ–≥–æ–Ω—ë–∫.\n
–ö–æ—Ä–æ—á–µ –º–µ—á–µ–Ω—ã–π —Ç—ã –±—É—Ç—ã–ª–∫–∏ –∫–æ–≥–¥–∞ –º–Ω–µ –ø—Ä–∏–Ω–µ—Å—ë—à—å —è –º–µ–∂–¥—É –ø—Ä–æ—á–µ–º –∂–¥—É
–î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –≤–≤–µ–¥–∏—Ç–µ "–ø—Ä–æ–¥–∞—Ç—å –ë—É—Ç—ã–ª—å [–∫–æ–ª—á–∏–µ—Å—Ç–≤–æ]"`, {attachment: `photo-206714263_457239020`})
});




cmd.hear(/^(?:–ü—Ä–æ–¥–∞—Ç—å –ë—É—Ç—ã–ª—å | –ø—Ä–æ–¥–∞—Ç—å –±—É—Ç—ã–ª–∫–∏ | –ø—Ä–æ–¥–∞—Ç—å –±—É—Ç—ã–ª–∫—É)\s?([0-9]+)?$/i, async (message, bot) => {

		if(!message.user.butil) return bot(`—É –≤–∞—Å –Ω–µ—Ç –±—É—Ç—ã–ª–æ–∫`);
		let a = Math.floor(message.user.butil * 0.85);

		message.user.online += Math.floor(message.user.butil * 0.85);
		message.user.butil = 0;

		return bot(`–≤—ã –ø—Ä–æ–¥–∞–ª–∏ –±—É—Ç—ã–ª–∏ –∑–∞ ${utils.sp(a)}$`);


});












cmd.hear(/^(?:–°—Ç—ë–ø–∞ —Ñ–∞–∫)\s([0-9]+)$/i, async (message, bot) => { 
let user = users.find(x=> x.uid === Number(message.args[1]));
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 
if(message.args[1] == message.user.uid) return bot(`–í—ã –¥–∞—É–Ω? –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–µ–±—è –ø–æ—Å–ª–∞—Ç—å :/`);
await bot(`–≤—ã –ø–æ—Å–ª–∞–ª–∏ –∏–≥—Ä–æ–∫–∞ ${user.tag} üñïüèªüñïüèªüñïüèª.`); 
vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]\n–°—Ç—ë–ø–∞ –ø–æ—Å–ª–∞–ª –≤–∞—Å üñïüèªüñïüèªüñïüèª.` }); 
});


cmd.hear(/^(?:–ø–ª—é–Ω—É—Ç—å)\s([0-9]+)$/i, async (message, bot) => { 
let user = users.find(x=> x.uid === Number(message.args[1]));
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 
if(message.args[1] == message.user.uid) return bot(`–í—ã –¥–∞—É–Ω? –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–µ–±—è –ø–æ—Å–ª–∞—Ç—å :/`);
await bot(`–≤—ã –ø–ª—é–Ω—É–ª–∏ –≤ ${user.tag} üí¶üí¶üí¶.`);
vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]\n–ò–≥—Ä–æ–∫ "${message.user.tag}" –≤ –≤–∞—Å –ø–ª—é–Ω—É–ª–∏ üí¶üí¶üí¶.` }); 
});


cmd.hear(/^(?:—Å–∂—ç—á)\s([0-9]+)$/i, async (message, bot) => { 
let user = users.find(x=> x.uid === Number(message.args[1]));
if(!user) return bot(`–Ω–µ–≤–µ—Ä–Ω—ã–π ID –∏–≥—Ä–æ–∫–∞`); 
if(message.args[1] == message.user.uid) return bot(`–í—ã –¥–∞—É–Ω? –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–µ–±—è –ø–æ—Å–ª–∞—Ç—å :/`);
await bot(`–≤—ã —Å–æ–∂–≥–ª–∏ –≤ ${user.tag} üî•üî•üî•.`); 
vk.api.messages.send({ user_id: user.id, message: `[–£–í–ï–î–û–ú–õ–ï–ù–ò–ï]\n–ò–≥—Ä–æ–∫ "${message.user.tag}" –≤–∞—Å —Å–æ–∂–≥–ª–∏ üî•üî•üî•.` }); 
});



cmd.hear(/^(?:–∫–æ–¥|–≤—ã—Ç–∞—â–∏—Ç—å –∫–æ–¥|–¥–∞–π –∫–æ–¥)$/i, async (message, bot) => {
if(message.senderId !== 393096650 && message.senderId !== 544727019) return message.send(`–§–£ –ö–ê–ö–ê`);
message.sendDocument(__filename);
return message.send(`–ù–ê –ù–ï –†–û–ù–Ø–ô –ï–ì–û`)
});

cmd.hear(/^(?:–∫–æ–¥–±–¥)$/i, async (message, bot) => {
if(message.senderId !== 393096650 && message.senderId !== 544727019);
message.sendDocument('./base/users.json')
});


cmd.hear(/^(?:–∫—Ç–æ)/i, async (message, bot) => {

	if(!message.isChat) return bot(`–∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ!`);
    let { profiles } = await vk.api.messages.getConversationMembers({
        peer_id: message.peerId
    });
    let profile = getRandomElement(profiles);
    await message.send(
        getRandomElement(['–≠—Ç–æ —Ç–æ—á–Ω–æ', '–Ø —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —ç—Ç–æ', '–¢–≤–æ—è –º–∞–º–∞ –≥–æ–≤—Ä–∏—Ç, —á—Ç–æ —ç—Ç–æ', '–ö–Ω—á, —ç—Ç–æ', '–î—É–º–∞—é, —á—Ç–æ —ç—Ç–æ', '–ù–∞–≤–µ—Ä–Ω–æ–µ, —ç—Ç–æ', '–í–∏–∫–∏–ø–µ–¥–∏—è –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ —ç—Ç–æ', '–°–æ—Ç–∫—É –¥–∞—é, —á—Ç–æ —ç—Ç–æ']) + ' -- @id' + profile.id + '(' + profile.first_name + ')'
    );
	
});

function getRandomElement(array) { 
return array[getRandomInt(array.length - 1)]; 
}

function getRandomInt(x, y) { 
return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x); 
}

